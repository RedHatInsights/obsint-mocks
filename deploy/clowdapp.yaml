apiVersion: v1
kind: Template
metadata:
  name: ccx-mock-ams
objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: ccx-mock-ams
    spec:
      envName: ${ENV_NAME}
      deployments:
        - name: service
          minReplicas: 1
          webServices:
            public:
              enabled: true
              apiPaths:
                - "${ROUTE_PREFIX}/"
          podSpec:
            image: ${IMAGE}:${IMAGE_TAG}
            command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--log-config=logging.yaml"]
            env:
              - name: SERVER_ROUTE_PREFIX
                value: "${ROUTE_PREFIX}"
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                # Use the same port as web services
                port: 8000
                scheme: HTTP
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 60
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8000
                scheme: HTTP
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 60
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
  - kind: Service
    apiVersion: v1
    metadata:
      name: ccx-mock-ams
      labels:
        app: ccx-mock-ams
    spec:
      ports:
        - name: web
          port: 8000
          protocol: TCP
          targetPort: 8000
      selector:
        app: ccx-mock-ams
      type: ClusterIP
parameters:
- description: Image name
  name: IMAGE
  value: quay.io/redhat-services-prod/obsint-processing-tenant/obsint-mocks/obsint-mocks
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: ClowdEnv Name
  name: ENV_NAME
  required: true
- name: CPU_REQUEST
  value: '10m'
- name: CPU_LIMIT
  value: '50m'
- name: MEMORY_REQUEST
  value: '250Mi'
- name: MEMORY_LIMIT
  value: '400Mi'
- description: Path in the route to server requests from
  name: ROUTE_PREFIX
  required: true
  value: "/api/mock-ams"
  regex: '^\/api\/[a-zA-Z0-9-]+'  # Same regex as clowder without the final /
